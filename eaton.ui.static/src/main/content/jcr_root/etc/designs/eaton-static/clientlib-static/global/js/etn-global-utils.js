/**
 *
 *
 *
 *
 *
 * - THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY - 
 *
 * - Generated by Gulp (gulp-babel).
 *
 *
 *
 *
 *
 */


//-----------------------------------
// Eaton: Utility Functions
//-----------------------------------
'use strict';

var App = App || {};
App.global = App.global || {};

App.global.utils = function () {

  // const isAEMTouchUI = (
  //   getCookie('cq-editor-layer.page') === 'Edit'
  //   && getCookie('cq-authoring-mode') === 'TOUCH'
  // )
  //   ? true
  //   : false;

  localStorage.setItem('backToSearch', 'false');

  var isAEMClassicUI = window.CQ && window.CQ.WCM && window.CQ.WCM.isEditMode() ? true : false;

  /**
  * Get Cookie Value
  */
  function getCookie(cookieName) {
    var match = document.cookie.match(new RegExp('(^| )' + cookieName + '=([^;]+)'));

    if (match) {
      return match[2];
    }
  }

  /**
  * AEM's Author mode
  */
  function isAEMAuthorMode() {
    return isAEMClassicUI ? true : false;
  }

  /**
  * Helper: Throttle Functions
  */
  function throttle(fn, threshhold, scope) {
    threshhold = threshhold || 250;
    var last = void 0;
    var deferTimer = void 0;

    return function () {
      var context = scope || this;
      var now = +new Date();
      var args = arguments;

      if (last && now < last + threshhold) {
        // hold on to it
        clearTimeout(deferTimer);
        deferTimer = setTimeout(function () {
          last = now;
          fn.apply(context, args);
        }, threshhold);
      } else {
        last = now;
        fn.apply(context, args);
      }
    };
  }

  // Public Methods
  return {
    getCookie: getCookie,
    isAEMAuthorMode: isAEMAuthorMode,
    throttle: throttle
  };
}();